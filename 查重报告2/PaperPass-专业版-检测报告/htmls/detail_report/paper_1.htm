<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="#">上一页</a>
<a class="pagelink" href="paper_2.htm">下一页</a>
<a class="pagelink" href="paper_6.htm">尾页</a>
页码：1/6页
]
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">1</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第1章 绪论</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">2</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.1 课题背景</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">3</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/2.htm' target='right' class='orange' >这是21世纪的第二个十年，也正是信息化高速发展的时代。</a><span class='green'>如今，人们获取信息、了解世界、互相交流的方式，已经正式地从电视、书信、报纸等传统载体跨入了潜力无限的互联网中。</span><span class='green'>我们可以将互联网类比为一个非常庞大的非结构化的数据库，如何从这浩瀚的信息海洋中快速准确的获取自己的目标信息成为了互联网时代的必修课，</span><span class='green'>同时这样的需求也催生了搜索引擎的出现和发展。</span><a href='../sentence_detail/6.htm' target='right' class='red' >搜索引擎指自动从因特网搜集信息，经过一定整理以后，提供给用户进行查询的系统。</a><span class='green'>作为互联网发展初期时产生的搜索引擎，为人们使用互联网获取知识带来了极大的便利，也使得更多网站更多内容有机会能够展现在大众的面前。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">4</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>随着互联网的不断发展，很多计算机工作者不再满足于不能自己控制的目标不够明确的搜索引擎，于是网络爬虫应景而生。</span><a href='../sentence_detail/9.htm' target='right' class='red' >网络爬虫（又被称为网页蜘蛛，网络机器人），是一种按照一定的规则，自动的抓取万维网信息的程序或者脚本。</a><span class='green'>网络爬虫的强大的功能在于它不仅可以爬取整个网页并保存，而且具有高度的可自定义性。</span><span class='green'>我们可以根据自己想要获取的数据格式来调整爬虫，使其剔除掉无用的部分而保留有效信息。</span><span class='green'>当今著名的搜索引擎公司都采用了不同的爬虫算法，在其他领域如金融、教育等行业，聚焦爬虫也在发挥着重大的作用。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">5</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/13.htm' target='right' class='orange' >作为新时代的计算机专业学生，学习高效准确获取信息是很有必要的。</a><span class='green'>所以了解并实现一个自己编写的自定义网络爬虫将会非常有帮助，通过实现一个爬虫，我们将会学习到很多方面的知识，感受到技术的进步</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">6</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.2 国内外爬虫技术概况</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">7</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.2.1 爬虫技术概述及发展历史</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">8</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/17.htm' target='right' class='red' >网络爬虫是一个功能很强的自动提取网页的程序， 它为搜索引擎从万维网上下载网页，是搜索引擎的重要组成。</a><span class='green'>从上世纪90年代起，就有很多计算机工作者开始从事网络爬虫的开发。</span><a href='../sentence_detail/19.htm' target='right' class='orange' >目前爬虫技术已经逐渐成熟，很多商业搜索引擎的核心模块就是网络爬虫。</a><span class='green'>网络上比较著名的开源爬虫包括Nutch，Larbin，Heritrix。</span><a href='../sentence_detail/21.htm' target='right' class='red' >网络爬虫最重要的是网页搜索策略（广度优先和最佳度优先）和网页分析策略（基于网络拓扑的分析算法和基于网页内容的网页分析算法）。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">9</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/22.htm' target='right' class='orange' >1.2.2 爬虫技术现状和爬虫设计者面临的问题</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">10</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>爬虫技术发展到今天，已经有无数的开源库以及开源框架可供我们快速开发，如Scrapy就是其中一种，本文也将就基于Scrapy来实现一个爬虫。</span><span class='green'>我们不再需要从零开始构建一个完整的搜索器，只需要根据所爬取的内容定制爬取规则，就可以很方便的开发。</span><span class='green'>而在诸多爬虫设计者中，公认的难题也早已不是开发周期的问题。</span><span class='green'>互联网资源数量无法量化，这意味再优秀的网络爬虫也无法爬取当前互联网中所有的资源，因此我们需要不断改进爬虫的性能，优化它的爬取方式。</span><span class='green'>互联网资源瞬息万变，这也意味着网络爬虫下载的网页在使用前就已经被修改甚至是删除了。</span><span class='green'>这对爬虫设计者是不可避免以及必须解决的问题。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">11</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>再者，服务器端软件所生成的统一资源地址数量庞大，以至于网络爬虫难以避免的采集到重复内容。</span><span class='green'>根据超文本协议“显示请求”（HTTP GET）的参数的无尽组合所返回的页面中，只有很少一部分确实传回唯一的内容。</span><span class='green'>例如：</span><span class='green'>一个照片陈列室网站，可能通过几个参数，让用户选择相关照片：</span><span class='green'>其一是通过四种方法对照片排序，其二是关于照片分辨率的的三种选择，其三是两种文件格式，</span><span class='green'>另加一个用户可否提供内容的选择，这样对于同样的结果集可能会有48种不同的统一资源地址与其关联。</span><span class='green'>这种数学组合给网络爬虫制造了麻烦，因为它们必须越过这些无关脚本变化的组合，寻找到不重复的内容。</span><span class='green'>本研究也将就以上问题，探索解决的方法。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">12</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.3 研究意义</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">13</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1. 深入学习Python和Scrapy开源框架，自己动手实现有良好拓展性的网络爬虫原型，将对我们学习新技术和拓宽眼界有着积极的作用。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">14</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2. 虽然实现的只是一个原型程序，但是探索简单易模改易拓展的思路是非常正确的。</span><a href='../sentence_detail/40.htm' target='right' class='red' >不同领域、不同背景的用户往往具有不同的检索目的和需求，通用搜索引擎所返回的结果包含大量用户不关心的网页。</a><a href='../sentence_detail/41.htm' target='right' class='red' >为了解决这个问题，一个灵活的爬虫有着无可替代的重要意义。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">15</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>3. 可以给 Python 这门编程语言在校园的推广起到一定的推进作用。</span><a href='../sentence_detail/43.htm' target='right' class='orange' >为以后想使用 Python 技术做搜索引擎的同学提供一定的参考。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">16</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.4 研究目标（黑体4号、居左）</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">17</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>本课题研究目的是根据以上背景，利用基于Python技术的开源库，探索性的实现一个自定义的拓展能力强的网络爬虫原型程序。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">18</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.基于Scrapy框架，实现多线程抓取</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">19</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.选择合适的数据库进行数据存取</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">20</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>3.完成以上目标后，探索性重构为分布式爬虫。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">21</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.4 研究中将会遇到的关键问题（黑体4号、居左）</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">22</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.突破目标网页对爬虫的限制，如拒绝访问、强制登出、封锁IP等。</span><span class='green'>破解网页的限制将是爬虫是否能高效运作的关键。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">23</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.解决URL重复问题。</span><span class='green'>在高速运行的爬虫工作过程中，如何鉴别即将爬取的网页是否已经爬取过极大影响了运行效率和资源的利用程度。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">24</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>3.多线程并发实现。</span><span class='green'>根据爬取目标的网页设计，如何设计更加高效利用CPU能力，怎样设计多线程的并发代码也需要学习解决。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">25</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.5 本论文的组织结构（黑体4号、居左）</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">26</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>本论文的组织结构如下，一共为6章，从第2章开始为论文正文部分，安排如下：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">27</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/58.htm' target='right' class='orange' >第2章为当前流行的爬虫技术的工作原理及相关技术介绍。</a><span class='green'>首先介绍了当前爬虫技术的分类组织以及不同类型爬虫的工作重点以及其他区别。</span><span class='green'>接着介绍主流爬虫所采用的关键算法，讲解算法的原理，分析算法的效率，介绍不同算法的优劣势。</span><span class='green'>比如宽度优先搜索和广度优先算法等。</span><span class='green'>然后论述了其他在爬虫工作过程中起重要作用的因素，如网页自身限制或者存取方式的差异等。</span><span class='green'>由此引出当前很多网页对爬虫程序的访问限制，重点介绍Robot协议。</span><span class='green'>接着是Cookies在当前前端技术中的广泛运用。</span><span class='green'>并详细分析Cookies的原理和作用。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">28</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第3章为开源框架Scrapy在Python爬虫开发中的应用。</span><span class='green'>首先对本文中使用的Scrapy爬虫框架进行分析，详细介绍如何使用，并分析针对URL去重问题中，Scrapy中便利的解决方式。</span><span class='green'>然后对数据存取的方式进行介绍，理性分析了不同类型数据库的优劣，详细介绍以MongoDB为代表的NoSQL数据库在爬虫技术中独特的优势。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">29</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第4章为聚焦原型爬虫系统的实现和展示。</span><span class='green'>作者以流行的社交网站“新浪微博”为目标，实现了可以爬取用户信息、微博内容等结果的自定义爬虫。</span><span class='green'>结合代码介绍了程序的详细实现及上文提到的关键问题的解决方法。</span><span class='green'>如抓取方法，Cooikes处理，数据库模块，并结合Flask尝试将数据库中保存的抓取结果组织展示到网页中去。</span><span class='green'>得对爬虫技术的进一步认识。</span><span class='green'>以及对爬虫未来的发展提出展望。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">30</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第5章为代码测试和结果展示，对爬虫的可行性进行验证和测试。</span><span class='green'>展示爬虫的运行抓取结果。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">31</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第6章为结论，对本文所做的工作进行了总结，陈述了在这次设计中取得的收获和感想，期望改进。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">32</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/78.htm' target='right' class='orange' >第2章 网络爬虫的工作原理及相关技术介绍</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">33</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>网络爬虫从上世纪九十年代逐渐开始发展，发展至今其已经渗透入我们网络生活中的方方面面。</span><span class='green'>一个好的爬虫应该有具有如下的特征：</span><span class='green'>明确的爬取目标，高效的爬取策略，有效的前置和后续处理，以及快速的运行速度。</span><span class='green'>本章将先从整体上论述网络爬虫的工作流程及涉及到的关键技术，为后续章节设计和实现爬虫的具体操作过程做铺垫。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">34</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.1 爬虫的工作原理及流程</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">35</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>要想实现上述特点的爬虫，首先优良的算法和架构是很重要的前提，因为爬虫要面对如何从互联网网尽可能多的获取数据并存储，</span><span class='green'>如何迅速从网页中提取自己所需要的结构和内容以及快速识别已经访问过的网页等等技术挑战。</span><a href='../sentence_detail/86.htm' target='right' class='orange' >以下将初步介绍爬虫的原理和大致工作流程。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">36</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.1.1 工作原理</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">37</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/88.htm' target='right' class='red' >网络爬虫通过请求站点上的HTML文档访问某一站点。</a><a href='../sentence_detail/89.htm' target='right' class='red' >它遍历Web 空间，不断从一个站点移动到另一个站点，自动建立索引并加入到网页数据库中。</a><a href='../sentence_detail/90.htm' target='right' class='red' >网络爬虫进入某个超级文本时， 它利用HTML语言的标记结构来搜索信息及获取指向其他超级文本的URL 地址，可以完全不依赖用户干预实现网络上的自动“爬行”和搜索。</a><a href='../sentence_detail/91.htm' target='right' class='red' >网络爬虫在搜索时往往采用一定的搜索策略。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">38</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.1.2 工作流程</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">39</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/93.htm' target='right' class='red' >爬虫工作抓取网页的过程其实和读者平时使用IE浏览器浏览网页的道理是一样的。</a><a href='../sentence_detail/94.htm' target='right' class='orange' >比如说你在浏览器的地址栏中输入www.baidu.com这个地址。</a><a href='../sentence_detail/95.htm' target='right' class='red' >打开网页的过程其实就是浏览器作为一个浏览的“客户端”，向服务器端发送了一次请求，把服务器端的文件“抓”到本地，再进行解释、展现。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">40</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/96.htm' target='right' class='red' >下图所示是一个通用的爬虫框架流程。</a><a href='../sentence_detail/97.htm' target='right' class='red' >首先从互联网页面中精心选择一部分网页，以这些网页的链接地址作为种子 URL，</a><a href='../sentence_detail/98.htm' target='right' class='red' >将这些种子 URL放入待抓取 URL队列中，爬虫从待抓取 URL队列依次读取，</a><a href='../sentence_detail/99.htm' target='right' class='red' >并将 URL通过 DNS解析，把链接地址转换为网站服务器对应的 IP地址。</a>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="#">上一页</a>
<a class="pagelink" href="paper_2.htm">下一页</a>
<a class="pagelink" href="paper_6.htm">尾页</a>
页码：1/6页
]
</div>

<br>
<div style="margin-left:8px">

<div style="text-align:center;background-color:#CA122C;margin-top:30px;overflow:hidden;">
<a href="http://www.paperpass.com/publish/index?from=ppreport_banner" target="_blank" style="display:block;"><img height="180" src="http://file.paperpass.com/images/fabiao.jpg"></a>
</div>

</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2016 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
